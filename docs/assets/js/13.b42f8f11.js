(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{153:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"why-proxy-instead-of-defineproperty"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#why-proxy-instead-of-defineproperty","aria-hidden":"true"}},[t._v("#")]),t._v(" Why Proxy instead of "),a("code",[t._v("defineProperty")])]),t._v(" "),a("p",[t._v("Proxy becomes a valid original class of javascript when ES6 is declared. It's a class and you can use it to define custom behaviours of objects. It interpolates the connection between the original object and client calls. It works simply and basically the same as getters/setters, but is more powerful.")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("Terminological Tip")]),t._v(" "),a("p",[t._v("target = the original object")]),t._v(" "),a("p",[t._v("traps = the getters/setters and similar things")]),t._v(" "),a("p",[t._v("handler = where you define traps")])]),t._v(" "),a("p",[t._v("By getters/setters, we can only define functions for the properties that only existed in the object. But that is no longer a problem in the case with a Proxy. This is how it looks like with getters/setters.")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" data "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// define a getter to log 'Hello'")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// then add a new value")]),t._v("\ndata"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// Logged 0 && 'Hello'")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// Logged only 0")]),t._v("\n")])])]),a("p",[t._v("And this is how it is with Proxy.")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" data "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// define a Proxy to log 'Hello'")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// then add a new value")]),t._v("\ndata"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// Logged 0 && 'Hello'")]),t._v("\nconsole"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// Logged 0 && 'Hello'")]),t._v("\n")])])]),a("p",[t._v("That's enough reason to choose Proxy over 'getters/setters'.")]),t._v(" "),a("h2",{attrs:{id:"deleteproperty"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deleteproperty","aria-hidden":"true"}},[t._v("#")]),t._v(" deleteProperty")]),t._v(" "),a("p",[t._v("Proxy has enough, numerous number of traps to intercepts objects to define reactive-ness. You can define a trap to intercetps 'in' operator, and delete operations. That's why "),a("code",[t._v("delete")]),t._v(" method is not supported in some browsers. If your browser supported Proxy, you can use delete method.")]),t._v(" "),a("h2",{attrs:{id:"why-not-proxy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#why-not-proxy","aria-hidden":"true"}},[t._v("#")]),t._v(" Why not Proxy")]),t._v(" "),a("p",[t._v("There's only a reason why we should not use proxy in place of getters/setters. That is because it is not widely supported. For example, Internet Explorer absolutely does not support Proxy, not even a little, not even the basic properties.")])])}],!1,null,null,null);n.options.__file="whyproxy.md";s.default=n.exports}}]);